echo "import dash"
echo "from dash import Dash, dcc, html"
echo "import plotly.express as px"
echo "import pandas as pd"


echo "app = Dash(__name__)"
echo "colors = {"
    echo "'background': '#111111',"
    echo "'text': '#FFFFFF'"
echo "}"

echo "df = pd.read_csv('file://localhost/Users/marmorri/csv_nfs/tpch')"

echo "df['date'] = pd.to_datetime(df['date'])"

echo "df = df.sort_values(by=['date'])"

for i in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 19 20 22 LB1 LB2 LB3 LB4 LB5 LB6 LB7 LB8 LB9 06b 06c # skip 18 and 21 for tpch until columnar joins available
do
echo "fdf${i} = df[(df.querynum == \"Q${i}\") & (df.para == \"autoparallel\") & (df.org == \"ddl-colfields\")]"
echo "fig${i} = px.scatter(fdf${i}, x=\"date\", y=\"runtime\", color=\"idx\", color_discrete_map={\"INDICES\": \"red\", \"NO INDICES\": \"#00FE35\"}, symbol=\"org\", render_mode='chrome', title=\"Q${i}\")"
echo "fig${i}.update_yaxes(range=[0, max(fdf${i}.runtime)*1.1])"
echo "fig${i}.update_layout("
    echo "plot_bgcolor=colors['background'],"
    echo "paper_bgcolor=colors['background'],"
    echo "font_color=colors['text'],"
    echo "legend=dict( yanchor=\"top\", y=1.1, xanchor=\"auto\", orientation=\"h\")"
echo ")"
echo
done

echo "layout = html.Div(style={'backgroundColor': colors['background']}, children=["

for i in mk*
do
        j=`echo $i | sed -e "s/^mk//"`
        echo "dcc.Link('[Go to "${j}"] ', href='/"${j}"',style={'font-family': 'Times New Roman, Times, serif', 'color': 'white', 'font-weight': 'bold'}),"
done

    echo "html.H1("
        echo "children='TPCH Dashboard',"
        echo "style={"
            echo "'textAlign': 'center',"
            echo "'color': colors['text']"
        echo "}"


for i in 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 19 20 22 LB1 LB2 LB3 LB4 LB5 LB6 LB7 LB8 LB9 06b 06c # skip 18 and 21 for tpch until columnar joins available
do
    echo "),"
echo "    dcc.Graph("
        echo "    id='dash-tpch${i}',"
        echo "    figure=fig${i}"
done
    echo "    )"

echo "])"


echo "if __name__ == '__main__':"
    echo "    app.run_server(debug=True)"
